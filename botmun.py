# -*- coding: utf-8 -*-
"""BOTMUN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10ghNu31lDlA03fAADiz67R9zISuJmkbP

HELPBOT V-1.0.0

Mounting google drive for file transfer flexibility
"""

from google.colab import drive
drive.mount('/content/drive')

"""Importing Necessary Librarys """

from codecs import ignore_errors
import numpy as np
import nltk 
import string
import random
import warnings
warnings.filterwarnings('ignore')

from nltk.stem import WordNetLemmatizer
nltk.download('popular', quiet=True)

with open('bot.txt','r', encoding='utf8', errors ='ignore') as fin:
    rd = fin.read().lower()
nltk.download('punkt')
nltk.download('wordnet')
sent_tokens = nltk.sent_tokenize(rd)
word_tokens = nltk.word_tokenize(rd)

"""Token Testing"""

sent_tokens[:4]

word_tokens[:4]

GREETING_INPUTS = ("hello", "hi", "greetings", "sup", "what's up","hey",)
GREETING_RESPONSES = ["hi", "hey", "*nods*", "hi there", "hello",'Jai shree Ram',"I am glad! You are talking to me"]

def greeting(sentence):
    """If user's input is a greeting, return a greeting response"""
    for word in sentence.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)

lemmer = WordNetLemmatizer()
def LemTokens(tokens):
    return [lemmer.lemmatize(token) for token in tokens]
remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)
def LemNormalize(text):
    return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))

"""Stackoverflow se help liya neeche ka hehe :)"""

from sklearn.feature_extraction.text import  TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

def response(user_response):
    robo_response=''
    sent_tokens.append(user_response)
    TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_words='english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals = cosine_similarity(tfidf[-1], tfidf)
    idx=vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    req_tfidf = flat[-2]
    if(req_tfidf==0):
        robo_response=robo_response+"I am sorry! I don't understand you thora clear likho yaar"
        return robo_response
    else:
        robo_response = robo_response+sent_tokens[idx]
        return robo_response

Flag= True
print('HELPBOT: My name is Manoj.I know everything about MUNS Ask me anything But pehle Hi bolo, IF you dont like me "type bye" and ill go and kill myself :)')
while(Flag==True):
  user_response=input()
  user_response=user_response.lower()
  if(user_response!='bye'):
    if(user_response=='thanks'):
      Flag=False
      print("HELPBOT: You are welcome and dosti mai no sorry no thank you :=)")
    else:
      if(greeting(user_response)!=None):
            print("HELPBOT:"+greeting(user_response))
      else:
        print("HELPBOT: ",end="")
        print(response(user_response))
        sent_tokens.remove(user_response)
  else:
    flag=False
    print("HELPBOT: Bye! take care..Shabba Khair Kailash Khair")